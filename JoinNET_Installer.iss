; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Join.NET"
#define MyAppVerName "Join.NET"
#define MyAppExeName "JoinNET.exe"

[Setup]
BackColorDirection=lefttoright
BackColor2=$00F8A57C
BackColor=$00FC7745
AppName={#MyAppName}
AppId=garakuta_join_net
AppVerName={#MyAppVerName}
AppVersion=0.0.0.1
DefaultDirName={pf}\joinnet
DefaultGroupName={#MyAppName}
OutputBaseFilename=joinnet_setup
SolidCompression=Yes

[Languages]
Name: english; MessagesFile: compiler:Default.isl
Name: japanese; MessagesFile: compiler:Languages\Japanese.isl

[Code]
// Utility functions for Inno Setup
//   used to add/remove programs from the windows firewall rules
// Code originally from http://news.jrsoftware.org/news/innosetup/msg43799.html

const
  NET_FW_SCOPE_ALL = 0;
  NET_FW_IP_VERSION_ANY = 2;

procedure SetFirewallException(AppName,FileName:string);
var
  FirewallObject: Variant;
  FirewallManager: Variant;
  FirewallProfile: Variant;
begin
  try
    FirewallObject := CreateOleObject('HNetCfg.FwAuthorizedApplication');
    FirewallObject.ProcessImageFileName := FileName;
    FirewallObject.Name := AppName;
    FirewallObject.Scope := NET_FW_SCOPE_ALL;
    FirewallObject.IpVersion := NET_FW_IP_VERSION_ANY;
    FirewallObject.Enabled := True;
    FirewallManager := CreateOleObject('HNetCfg.FwMgr');
    FirewallProfile := FirewallManager.LocalPolicy.CurrentProfile;
    FirewallProfile.AuthorizedApplications.Add(FirewallObject);
  except
  end;
end;

procedure RemoveFirewallException( FileName:string );
var
  FirewallManager: Variant;
  FirewallProfile: Variant;
begin
  try
    FirewallManager := CreateOleObject('HNetCfg.FwMgr');
    FirewallProfile := FirewallManager.LocalPolicy.CurrentProfile;
    FireWallProfile.AuthorizedApplications.Remove(FileName);
  except
  end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep=ssPostInstall then
     SetFirewallException('JoinNET Web Server', ExpandConstant('{app}\')+'JoinNET.exe');
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
  if CurUninstallStep=usPostUninstall then
     RemoveFirewallException(ExpandConstant('{app}\')+'JoinNET.exe');
end;

[CustomMessages]
english.MyAppName=Join.NET
english.AppVerName=Join.NET
english.DefaultGroupName=Join.NET
english.HelpFile=\help\en\
english.HelpString=Help

japanese.MyAppName=Join.NET
japanese.AppVerName=Join.NET
japanese.DefaultGroupName=Join.NET
japanese.HelpFile=\help\ja\
japanese.HelpString=ƒwƒ‹ƒv

[Tasks]
Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}

[Files]
Source: .\Release\*; Excludes:".\JoinNET.vshost*, *.pdb, WebServer"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs
Source: .\Release\WebServer\template\filelist.html; DestDir: "{app}"; Flags: ignoreversion recursesubdirs
Source: .\help\ja\JoinNET.chm; DestDir: "{app}\help\ja\"; Flags: ignoreversion
Source: .\help\en\JoinNET.chm; DestDir: "{app}\help\en\"; Flags: ignoreversion
Source: .\LICENSE.txt; DestDir: "{app}"; Flags: ignoreversion
;Source: .\ver.txt; DestDir: "{app}";

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: {userdesktop}\{cm:MyAppName}; Filename: {app}\{#MyAppExeName}; Tasks: desktopicon; WorkingDir: {app}
Name: "{group}\{cm:MyAppName}"; Filename: "{app}\{#MyAppExeName}"; WorkingDir: "{app}";
Name: "{group}\{cm:HelpString}"; Filename: "{app}{cm:HelpFile}JoinNET.chm"; WorkingDir: "{app}";
