<Window x:Class="JoinNET.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:JoinNET"
        Title="JoinNET" Height="480" Width="640" Loaded="Window_Loaded" Closing="Window_Closing">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ExpressionDark.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--  コンバーター  -->
            <local:NodeStatusColorConverter x:Key="nodeStatusColorConverter" />
            <local:SIPAccountStatusColorConverter x:Key="SIPAccountStatusColorConverter" />
            <local:StringToBitmapConverter x:Key="stringToBitmapConverter" />
            <local:FilePathToVisibleConverter x:Key="filePathToVisibleConverter" />
            <local:InboolToVisibleConverter x:Key="inboolToVisibleConverter" />

            <!--  テンプレート 画像有りボタン  -->
            <ControlTemplate x:Key="ctImageButton" TargetType="{x:Type Button}">
                <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Grid.RenderTransform>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                        <EasingColorKeyFrame KeyTime="0" Value="White" />
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                        <EasingColorKeyFrame KeyTime="0" Value="Transparent" />
                                        <EasingColorKeyFrame KeyTime="0:0:0.1" Value="Transparent" />
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Offset)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.533" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.754" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.819" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                        <EasingColorKeyFrame KeyTime="0" Value="#99FFFFFF" />
                                        <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#99FFFFFF" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                        <EasingColorKeyFrame KeyTime="0" Value="#dd888888" />
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                        <EasingColorKeyFrame KeyTime="0" Value="#aa888888" />
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                        <EasingColorKeyFrame KeyTime="0" Value="#66888888" />
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Offset)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.754" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    <Border x:Name="border" RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Border.Background>
                            <RadialGradientBrush>
                                <GradientStop Offset="0" Color="#00000000" />
                                <GradientStop Offset="1" Color="#00000000" />
                                <GradientStop Offset="0.5" Color="#00000000" />
                            </RadialGradientBrush>
                        </Border.Background>
                    </Border>
                </Grid>
            </ControlTemplate>

            <!-- クライアント -->
            <DataTemplate x:Key="listClient">
                <Grid>
                    <TextBlock Text="{Binding user, Mode=OneWay}" FontSize="14" Margin="2" Foreground="{Binding node_status, Converter={StaticResource nodeStatusColorConverter}, Mode=OneWay}" VerticalAlignment="Center" />
                </Grid>
            </DataTemplate>

            <!-- 共有データ -->
            <Style x:Key="listShareItem" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Bd"
                                        Margin="5,5,5,5"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Background="#FFEEEEEE"
                                        BorderBrush="#FFCCCCCC"
                                        BorderThickness="1"
                                        Padding="2"
                                        RenderTransformOrigin="1,1"
                                        SnapsToDevicePixels="true">

                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Image x:Name="img"
                                               Width="{Binding ElementName=imageWidth, Path=Value, Mode=TwoWay}"
                                               RenderTransformOrigin="0,0"
                                               Source="{Binding Path=name,
                                                                Mode=TwoWay,
                                                                Converter={StaticResource stringToBitmapConverter}}"
                                               Stretch="UniformToFill">
                                    </Image>

                                    <Button x:Name="deleteButton"
                                                Width="20"
                                                Height="20"
                                                Margin="0,5,5,0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                Click="deleteButton_Click"
                                                Template="{DynamicResource ctImageButton}"
                                                Visibility="Collapsed">
                                        <Image Width="20"
                                                   Height="20"
                                                   Source="Images\delete.png"
                                                   Stretch="Fill" />
                                    </Button>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--  マウスオーバー時の動作  -->
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Panel.ZIndex" Value="1" />
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="00:00:00.3"
                                                                     Storyboard.TargetName="deleteButton"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     To="1" />
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="deleteButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="00:00:00.3"
                                                                     Storyboard.TargetName="deleteButton"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     To="0" />
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="deleteButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Hidden}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <!--  選択時の動作  -->
                                <Trigger Property="IsSelected" Value="true">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="00:00:00.3"
                                                                    Storyboard.TargetName="Bd"
                                                                    Storyboard.TargetProperty="(Border.Background).Color"
                                                                    To="#ff2f50ff" />
                                                <ColorAnimation Duration="00:00:00.3"
                                                                    Storyboard.TargetName="Bd"
                                                                    Storyboard.TargetProperty="(Border.BorderBrush).Color"
                                                                    To="#ff2f50ff" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="00:00:00.3"
                                                                    Storyboard.TargetName="Bd"
                                                                    Storyboard.TargetProperty="(Border.Background).Color"
                                                                    To="#FFEEEEEE" />
                                                <ColorAnimation Duration="00:00:00.3"
                                                                    Storyboard.TargetName="Bd"
                                                                    Storyboard.TargetProperty="(Border.BorderBrush).Color"
                                                                    To="#ffCCCCCC" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- 共有されたデータ -->
            <Style x:Key="listSharedItem" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Bd"
                                        Margin="5,5,5,5"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Background="#FFEEEEEE"
                                        BorderBrush="#FFCCCCCC"
                                        BorderThickness="1"
                                        Padding="2"
                                        RenderTransformOrigin="1,1"
                                        SnapsToDevicePixels="true"
                                    Visibility="{Binding Path=is_delete, Converter={StaticResource inboolToVisibleConverter}}"
                                    
                                    >

                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Image x:Name="img"
                                               Width="{Binding ElementName=imageWidth, Path=Value, Mode=TwoWay}"
                                               RenderTransformOrigin="0,0"
                                               Source="{Binding Path=filepath,
                                                                Mode=TwoWay,
                                                                Converter={StaticResource stringToBitmapConverter}}"
                                               Stretch="UniformToFill">
                                    </Image>

                                    <Button x:Name="deleteButton"
                                                Width="20"
                                                Height="20"
                                                Margin="0,5,5,0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                Click="deleteButton_Click"
                                                Template="{DynamicResource ctImageButton}"
                                                Visibility="Collapsed">
                                        <Image Width="20"
                                                   Height="20"
                                                   Source="Images\delete.png"
                                                   Stretch="Fill" />
                                    </Button>
                                    <ProgressBar 
                                        Width="{Binding ElementName=imageWidth, Path=Value, Mode=TwoWay}"
                                        Height="20"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Bottom"
                                        Margin="1,0,1,1" SmallChange="1"
                                        Value="{Binding Path=downloadedrate, Mode=OneWay}"
                                        Visibility="{Binding Path=filepath, Mode=OneWay, Converter={StaticResource filePathToVisibleConverter}}"
                                    
                                        />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--  マウスオーバー時の動作  -->
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Panel.ZIndex" Value="1" />
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="00:00:00.3"
                                                                     Storyboard.TargetName="deleteButton"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     To="1" />
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="deleteButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="00:00:00.3"
                                                                     Storyboard.TargetName="deleteButton"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     To="0" />
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="deleteButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Hidden}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <!--  選択時の動作  -->
                                <Trigger Property="IsSelected" Value="true">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="00:00:00.3"
                                                                    Storyboard.TargetName="Bd"
                                                                    Storyboard.TargetProperty="(Border.Background).Color"
                                                                    To="#ff2f50ff" />
                                                <ColorAnimation Duration="00:00:00.3"
                                                                    Storyboard.TargetName="Bd"
                                                                    Storyboard.TargetProperty="(Border.BorderBrush).Color"
                                                                    To="#ff2f50ff" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="00:00:00.3"
                                                                    Storyboard.TargetName="Bd"
                                                                    Storyboard.TargetProperty="(Border.Background).Color"
                                                                    To="#FFEEEEEE" />
                                                <ColorAnimation Duration="00:00:00.3"
                                                                    Storyboard.TargetName="Bd"
                                                                    Storyboard.TargetProperty="(Border.BorderBrush).Color"
                                                                    To="#ffCCCCCC" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- 共有リスト -->
            <!--  リストボックス(写真)  -->
            <Style x:Key="ListboxShare" TargetType="{x:Type ListBox}">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <!-- 
                            <vwrap:VirtualizingWrapPanel Margin="5"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Top"
                                           IsItemsHost="True"
                                           Orientation="Horizontal">
                            </vwrap:VirtualizingWrapPanel>
                            -->
                            <WrapPanel 
                                Margin="5"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Top"
                                           Background="#00000000"
                                           IsItemsHost="True"
                                           Orientation="Horizontal"
                                />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard x:Key="Storyboard_LoadingAnimation">
            	<DoubleAnimationUsingKeyFrames 
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)" 
                    RepeatBehavior="1"
                    >
            		<EasingDoubleKeyFrame KeyTime="0:0:1" Value="359"/>
            	</DoubleAnimationUsingKeyFrames>
            </Storyboard>

        </ResourceDictionary>
    </Window.Resources>
    <DockPanel Background="{StaticResource ControlBackgroundBrush}">
        <!--
        <StackPanel DockPanel.Dock="Top">
            <StackPanel Orientation="Horizontal">
                <Label Width="80">名前</Label>
                <TextBox Width="200" Text="{Binding Path=clientname, Mode=TwoWay}"></TextBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Width="80">ローカル</Label>
                <TextBlock Name="textLocal" Width="200" ></TextBlock>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Width="80">パブリック</Label>
                <TextBlock Name="textPublic" Width="200"></TextBlock>
            </StackPanel>
        </StackPanel>
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
            <Button Name="btnRequestFileList" Content="Req List" Width="80" Click="btnRequestFileList_Click" />
            <Button x:Name="btnRequestFile" Content="Req File" Width="80" Click="btnRequestFile_Click" />
        </StackPanel>
        -->
        <Grid DockPanel.Dock="Left">
            <DockPanel Width="200">
                <TextBlock Name="txtSIPStatus" DockPanel.Dock="Bottom" Text="{Binding status, Converter={StaticResource SIPAccountStatusColorConverter}, Mode=OneWay}"  FontSize="14" FontWeight="Bold" Foreground="{StaticResource TextBrush}" TextWrapping="Wrap"/>
                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                    <Button Name="btnConnect" Content="接続" Width="48" Click="btnConnect_Click"/>
                    <Button Name="btnDisconnect" Content="切断" Width="48" Click="btnDisconnect_Click"/>
                </StackPanel>
                <ListBox Name="listClient"  ItemTemplate="{StaticResource listClient}" SelectionChanged="listClient_SelectionChanged" />
            </DockPanel>
            <StackPanel Name="clientLoadingInformation" VerticalAlignment="Center" HorizontalAlignment="Center" >
                <TextBlock Name="textLoadingClient" FontSize="14" FontWeight="Bold" Foreground="{StaticResource TextBrush}" TextWrapping="Wrap" >
                接続情報を読み込み中です。
                <LineBreak />
                しばらくお待ちください。
                </TextBlock>
                <Image Name="imageLoading" Width="64" Source="Images/loading.png" RenderTransformOrigin="0.5,0.5" >
                    <Image.RenderTransform>
                    	<TransformGroup>
                    		<RotateTransform/>
                    	</TransformGroup>
                    </Image.RenderTransform>
                </Image>
            </StackPanel>
        </Grid>
        <DockPanel DockPanel.Dock="Bottom" >
            <Button Name="btnSendMessage" DockPanel.Dock="Right" Content="送信" Margin="2" Padding="2" Click="btnSendMessage_Click"/>
            <TextBox Name="textChatMessage"/>
        </DockPanel>
        <TextBox Name="textMessage" DockPanel.Dock="Bottom" Height="120"/>
        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" >
            <TextBlock Text="画像サイズ" VerticalAlignment="Center" Margin="2" Foreground="{StaticResource TextBrush}"/>
            <Slider Name="imageWidth" Width="100" Minimum="120" Maximum="360" Value="{Binding Path=imageWidth, Mode=TwoWay}" VerticalAlignment="Center"  />
        </StackPanel>
        <TabControl Name="tabList">
            <!--
            <TabItem Header="メッセージ">
                <DockPanel>
                    <DockPanel DockPanel.Dock="Bottom">
                        <Label DockPanel.Dock="Left">メッセージ</Label>
                        <Button Name="btnSendMessage" DockPanel.Dock="Right"  Content="送信" Click="btnSendMessage_Click" />
                        <TextBox Name="textMessage"></TextBox>
                    </DockPanel>
                    <ListBox Name="listMessage" />
                </DockPanel>
            </TabItem>
            -->
            <TabItem Header="共有ファイル">
                <ListBox Name="listShareItem" 
                            ItemContainerStyle="{DynamicResource listShareItem}" 
                            Style="{StaticResource ListboxShare}" 
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            AllowDrop="True" Drop="listShareItem_Drop" 
                            Background="{StaticResource ControlBackgroundBrush}"
                            PreviewDragOver="listShareItem_PreviewDragOver" />
            </TabItem>
            <TabItem Header="接続先の共有">
                <ListBox Name="listConnectedShare" 
                         Style="{StaticResource ListboxShare}" 
                         ItemContainerStyle="{DynamicResource listSharedItem}"
                         Background="{StaticResource ControlBackgroundBrush}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         />
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
